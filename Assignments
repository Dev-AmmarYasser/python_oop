class Game:
    def __init__(self, name, developer, year, price):
        self.name = name
        self.developer = developer
        self.year = year
        self.price = price

    def price_in_pounds(self):
        return self.price * 49.5


game_one = Game("Ys", "Falcom", 2010, 50)

print(f"Game Name Is \"{game_one.name}\", ", end="")
print(f"Developer Is \"{game_one.developer}\", ", end="")
print(f"Release Date Is \"{game_one.year}\", ", end="")
print(f"Price In Egypt Is {game_one.price_in_pounds()}", end="")

# Needed Output
# "Game Name Is "Ys", Developer Is "Falcom", Release Date Is "2010", Price In Egypt Is 780.0 Egyptian Pounds"


print("-" * 50)


class User:
    def __init__(self, f_name, l_name, age, gender):
        self.fname = f_name
        self.lname = l_name
        self.age = age
        self.gender = gender

    def full_details(self):
        if (self.gender == "Male"):
            return f"Hello Mr {self.fname} {self.lname[0]}. [{40 - self.age}] Years To Reach 40"
        else:
            return f"Hello Mrs {self.fname} {self.lname[0]}. [{40 - self.age}] Years To Reach 40"

    # Write Class Content


user_one = User("Osama", "Mohamed", 38, "Male")
user_two = User("Eman", "Omar", 25, "Female")

print(user_one.full_details())  # Hello Mr Osama M. [02] Years To Reach 40
print(user_two.full_details())  # Hello Mrs Eman O. [15] Years To Reach 40


print("-" * 50)


class Message:
    @staticmethod
    def print_message():
        return "Hello From Class Message"


print(Message.print_message())

# Output
# Hello From Class Message

print("-" * 50)


class Games:
    def __init__(self, user_input):
        self.user_input = user_input

    def show_games(self):
        if isinstance(self.user_input, str):
            print(f"I Have One Game Called \"{self.user_input}\"")

        elif isinstance(self.user_input, list):
            print("I Have Many Games:")
            for game in self.user_input:
                print(f"-- {game}")

        else:
            print(f"I Have {self.user_input} Game.")


my_game = Games("Shadow Of Mordor")
my_games_names = Games(["Ys II", "Ys Oath In Felghana", "YS Origin"])
my_games_count = Games(80)

my_game.show_games()
# Ouput
# I Have One Game Called "Shadow Of Mordor"

my_games_names.show_games()
# Ouput
# I Have Many Games:
# -- Ys II
# -- Ys Oath In Felghana
# -- YS Origin

my_games_count.show_games()
# Output
# I Have 80 Game.


print("-" * 50)

# Main Class


class Members:

    def __init__(self, n, p):

        self.name = n

        self.permission = p

    def show_info(self):

        return f"Your Name Is {self.name} And You Are {self.permission}"

# Create Admin Class Here


class Admins(Members):
    pass
    # def show_info(self):
    #     return f"Your Name Is {self.name} And You Are Admin"

# Create Moderators Class Here


class Moderators(Members):
    pass
    # def show_info(self):
    #     return f"Your Name Is {self.name} And You Are Moderator"


member_one = Admins("Osama", "Admin")
member_two = Moderators("Ahmed", "Moderator")

print(member_one.show_info())
# Output
# Your Name Is Osama And You Are Admin

print(member_two.show_info())
# Output
# Your Name Is Ahmed And You Are Moderator


print("-" * 50)


class A:

    def __init__(self, one):

        self.one = one


class B:

    def __init__(self, two):

        self.two = two


class C:

    def __init__(self, three):

        self.three = three


# Write The Class Called "Name" Here

class Name(A, B, C):

    def __init__(self, one, two, three):
        A.__init__(self, one)
        B.__init__(self, two)
        C.__init__(self, three)

    def show_name(self):
        return "The Name Is " + self.one + self.two + self.three


the_name = Name("El", "ze", "ro")

print(the_name.show_name())

# Ouput
# The Name Is Elzero


class A:
    def greet(self):
        print("Hello from A")


class B(A):
    def greet(self):
        print("Hello from B")
        super().greet()


class C(A):
    def greet(self):
        print("Hello from C")
        super().greet()


class D(B, C):
    def greet(self):
        print("Hello from D")
        super().greet()


d = D()
d.greet()
